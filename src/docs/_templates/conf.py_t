# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

{% if append_syspath -%}
import sys
import os
import ast


# appending these two paths to sys.path ensures that sphinx build will work regardless of whether being run from
# main project folder or src
sys.path.append({{ module_path | repr }})
sys.path.insert(0, {{ module_path[0:module_path.rfind('/')] | repr }})

{% else -%}
# import os
# import sys
{% if module_path -%}
#sys.path.insert(0, {{module_path | repr}})
{% else -%}
# sys.path.insert(0, os.path.abspath('.'))
{% endif -%}
{% endif %}

# -- Project information -----------------------------------------------------

project = {{ project | repr }}
copyright = {{ copyright | repr }}
author = {{ author | repr }}

{%- if version %}

# The short X.Y version
version = {{ version | repr }}
{%- endif %}
{%- if release %}

# The full version, including alpha/beta/rc tags
release = {{ release | repr }}
{%- endif %}


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
{%- for ext in extensions %}
    '{{ ext }}',
{%- endfor %}
    'sphinx.ext.autosummary',
    'sphinx.ext.autodoc',
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.coverage',
    'sphinx.ext.githubpages',
    'sphinx.ext.graphviz',
    'sphinx.ext.imgconverter',
    'sphinx.ext.inheritance_diagram',
    'sphinx.ext.napoleon',
    'sphinx.ext.intersphinx',
    'recommonmark'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['{{ dot }}templates', '_templates']

source_parsers = {'.md': 'recommonmark.parser.CommonMarkParser'}

# suffixes that sphinx-build will look for to build html files from
source_suffix = {'.rst': 'restructuredtext',
                 '.md' : 'markdown',
                 '.txt': 'markdown'}

# The master toctree document. Default is index.
{% if master != 'index' -%}

master_doc = {{ master | repr }}

{% endif -%}

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
# NOTE - this applies only to RST/MD files already generated by sphinx apidoc.
# Arguments can be passed directly to sphinx apidoc to avoid creation of RST files altogether for specified patterns.
exclude_patterns = [{{ exclude_patterns }}]


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.

# to add additional documentation that lives outside the codebase, use the extra_doc_files dict to add pages
# as a tuple of (filename, file_extension, path prefix relative to this conf.py_t file)
extra_doc_files = [('README','.md','./')]
extra_nav_links = {}

for file in extra_doc_files:
    full_name = file[0] + file[1]
    full_path = file[2] + file[0] + file[1]
    os.popen('cp ' + full_path + ' ' + full_name)
    extra_nav_links[file[0].replace('_',' ').title()] = file[0] + '.html'

html_theme = "sphinx_rtd_theme"
html_theme_options = {
    "fixed_sidebar" : True,
    'description' : "test description for underneath logo",
    'extra_nav_links': extra_nav_links
}

# for links to external pages, add as additional key/value entry to dictionary below
extra_nav_links['GitHub'] = 'https://github.com/inQbator-eviCore/clpt'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['{{ dot }}static']

{%- if 'sphinx.ext.intersphinx' in extensions %}
# -- Options for intersphinx extension ---------------------------------------

# allows for reference to documentation of external libraries
intersphinx_mapping = {'python': ('https://docs.python.org/3', None),
                       'sphinx' : ('https://www.sphinx-doc.org/en/master/index.html', None),
                       'flask' : ('https://flask.palletsprojects.com/en/1.1.x/', None),
                       'apscheduler' : ('https://apscheduler.readthedocs.io/en/stable/index.html', None),
                       'sqlalchemy' : ('https://docs.sqlalchemy.org/en/13/intro.html', None)}
{%- endif %}
{%- if 'sphinx.ext.todo' in extensions %}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True
{%- endif %}

# enable autosummary tables of modules/packages to be created on top of doctree
autosummary_generate = True

add_module_names = False

# make sure references to section names don't conflict if similar section names used across modules
# reference sections with directory:section
autosectionlabel_prefix_document = True

#TODO - figure out how to make classes and functions available to sphinx api-doc context
# def parse_ast(filepath):
#     with open(filepath) as file:
#         node = ast.parse(file.read())
#     classes = [n for n in node.body if isinstance(n, ast.ClassDef)]
#     return classes[0]

